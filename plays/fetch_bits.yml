- set_fact:
    components: '{{ job_info.job.components }}'

- name: Ensure proper directories are created
  file:
    path: '{{ item }}'
    state: directory
    owner: '{{ ansible_user_id }}'
    group: '{{ ansible_user_gid }}'
  with_items:
    - '{{ dci_cache_dir }}'
    - '{{ dci_mirror_location }}/dci_repo'
  become: true

- name: Import remoteci SSL keys
  vars:
    dci_import_keys_remoteci_id: '{{ job_info.job.remoteci.id }}'
  include_role:
    name: dci-import-keys

- name: Retrieve component
  vars:
    dci_retrieve_component_local_repo: '{{ dci_mirror_location }}/dci_repo'
    dci_retrieve_component_component_name: '{{ item["canonical_project_name"] }}'
    dci_retrieve_component_component_id: '{{ item["id"] }}'
  include_role:
    name: dci-retrieve-component
  with_items: "{{ components }}"

- name: Prepare the global Yum .repo file with all the components
  yum_repository:
    name: '{{ item["canonical_project_name"] }}'
    description: '{{ item["canonical_project_name"] }}'
    baseurl: '{{ dci_baseurl }}/dci_repo/{{ item["canonical_project_name"] }}/'
    gpgcheck: no
    file: '{{ dci_mirror_location }}/dci_repo/dci_repo'
  with_items: "{{ components }}"

- name: Prepare a Yum .repo file per component
  yum_repository:
    name: '{{ item["canonical_project_name"] }}'
    description: '{{ item["canonical_project_name"] }}'
    baseurl: '{{ dci_baseurl }}/dci_repo/{{ item["canonical_project_name"] }}/'
    gpgcheck: no
    file: '{{ dci_mirror_location }}/dci_repo/dci_repo_{{ item["canonical_project_name"] }}'
  with_items: "{{ components }}"

- name: Run the sync registry process
  include_tasks: plays/sync_registry.yaml
  when: job_info.job.topic.data.releasename >= 'pike'
