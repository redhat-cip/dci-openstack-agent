- set_fact:
    components: "{{ job_info.job.components }}"

- name: Ensure proper directories are created
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ ansible_user_id }}"
    group: "{{ ansible_user_gid }}"
  with_items:
    - "{{ dci_cache_dir }}"
    - "{{ dci_mirror_location }}/dci_repo"
  become: true

- name: Retrieve component
  vars:
    dci_retrieve_component_local_repo: "{{ dci_mirror_location }}/dci_repo"
    dci_retrieve_component_component_name: '{{ job_info.job.topic.name }}'
    dci_retrieve_component_component_id: '{{ item["id"] }}'
    dci_retrieve_component_registry_local_ip: "{{ dci_base_ip }}"
    dci_retrieve_component_registry_local_port: "{{ dci_registry_port }}"
  include_role:
    name: dci-retrieve-component
  with_items: "{{ components }}"

- name: Prepare the global Yum .repo file with all the components (legacy repo component)
  yum_repository:
    name: '{{ item["display_name"] }}'
    description: '{{ item["display_name"] }}'
    baseurl: '{{ dci_baseurl }}/dci_repo/{{ job_info.job.topic.name }}/'
    gpgcheck: no
    file: "{{ dci_mirror_location }}/dci_repo/dci_repo"
  with_items: "{{ components }}"
  when: item["type"].lower() != "compose"

- name: Prepare the global Yum .repo file with all the components & variants (Compose component)
  vars:
    required_variants:
      - OpenStack
  yum_repository:
    name: '{{ item[0]["display_name"] }}-{{ item[1] }}'
    description: '{{ item[0]["display_name"] }} {{ item[1] }}'
    baseurl: "{{ dci_baseurl }}/dci_repo/{{ job_info.job.topic.name }}/compose/{{ item[1] }}/$basearch/os"
    gpgcheck: no
    file: "{{ dci_mirror_location}}/dci_repo/dci_repo"
  loop: "{{ components|product(required_variants)|list }}"
  when: item[0]["type"].lower() == "compose"

- name: Prepare a Yum .repo file per component (legacy repo component)
  yum_repository:
    name: '{{ item["display_name"] }}'
    description: '{{ item["display_name"] }}'
    baseurl: '{{ dci_baseurl }}/dci_repo/{{ job_info.job.topic.name }}/'
    gpgcheck: no
    file: '{{ dci_mirror_location }}/dci_repo/dci_repo_{{ job_info.job.topic.name }}'
  with_items: "{{ components }}"
  when: item["type"].lower() != "compose"

- name: Prepare a Yum .repo file per component & variant (Compose component)
  vars:
    required_variants:
      - OpenStack
  yum_repository:
    name: '{{ item[0]["display_name"] }}-{{ item[1] }}'
    description: '{{ item[0]["display_name"] }} {{ item[1] }}'
    baseurl: '{{ dci_baseurl }}/dci_repo/{{ job_info.job.topic.name }}/compose/{{ item[1] }}/$basearch/os'
    gpgcheck: no
    file: '{{ dci_mirror_location }}/dci_repo/dci_repo_{{ job_info.job.topic.name }}-{{ item[1] }}'
  loop: "{{ components|product(required_variants)|list }}"
  when: item[0]["type"] == "compose"

- name: Run the sync registry role
  include_role:
    name: dci-sync-registry
  vars:
    dci_sync_registry_images_list: '{{ dci_mirror_location }}/dci_repo/{{ job_info.job.topic.name }}/compose/images_list.yaml'
    dci_sync_registry_local_ip: '{{ dci_base_ip }}'
    dci_sync_registry_local_port: '{{ dci_registry_port }}'
    dci_sync_registry_remote_login: '{{ job_info.job.topic.data.registry.login }}'
    dci_sync_registry_remote_password: '{{Â job_info.job.topic.data.registry.password }}'
    dci_sync_registry_skip_list: '{{ skip_container_images }}'
  loop: "{{ components }}"
