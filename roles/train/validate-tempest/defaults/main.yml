---

floating_ip_cidr: "{{ undercloud_network_cidr }}"
public_net_pool_start: "{{ floating_ip_cidr|nthhost(100) }}"
public_net_pool_end: "{{ floating_ip_cidr|nthhost(120) }}"
public_net_gateway: "{{ floating_ip_cidr|nthhost(1) }}"
test_white_regex: "{{ test_regex|default('smoke') }}"
test_black_regex: []
check_tempest_bugs: false

public_net_name: public
public_network_type: flat
public_physical_network: datacentre
public_segmentation_id: ''
tenant_network_cidr: 192.168.0.0/24

tempest_deployer_input_file: tempest-deployer-input.conf
# steps:
tempest_undercloud: false
tempest_config: true
tempest_overcloud: true
run_tempest: false
post_tempest: true

# venv or packages or container
tempest_format: packages

tempest_container_registry: >-
  {% if (undercloud_enable_tempest is defined) and undercloud_enable_tempest|bool -%}
  {{ local_docker_registry_host }}:8787/{{ docker_registry_namespace }}
  {%- else -%}
  {{ docker_registry_host }}/{{ docker_registry_namespace }}
  {%- endif %}
tempest_container_namespace: >-
   {% if ansible_distribution == 'CentOS' -%}
   centos-binary-tempest
   {%- elif ansible_distribution == 'RedHat' -%}
   rhel-binary-tempest
   {%- endif -%}

tempest_container_tag: >-
  {% if (undercloud_enable_tempest is defined and undercloud_enable_tempest|bool) and (update_containers_append_tag is defined)-%}
  {{ container_build_id }}{{ update_containers_append_tag }}
  {%- else -%}
  {{ docker_image_tag }}
  {%- endif %}
tempest_dir: >-
  {% if tempest_format in ['container'] -%}
  /var/lib/tempest/tempest
  {%- else -%}
  {{ working_dir }}/tempest
  {%- endif %}
tempest_data: >-
  {% if tempest_format in ['container'] -%}
  /var/lib/tempest
  {%- else -%}
  {{ working_dir }}
  {%- endif %}
tempest_whitelist_file_src: "whitelist_file.j2"
tempest_whitelist_file: "whitelist_file.conf"
tempest_whitelist: []
tempest_log_dir: "/var/log/tempest"
tempest_log_file: "tempest.log"
tempest_plugins: >-
  {% if release not in ['newton', 'ocata', 'pike'] -%}
  [ "python-keystone-tests-tempest", "python-neutron-tests-tempest" ]
  {%- else -%}
  [ "python-keystone-tests", "python-neutron-tests" ]
  {%- endif -%}
tempest_plugins_git: []
tempest_extra_config: {}  # A dict containing values which needs to be overridden in tempest.conf
skip_file_src: "skip_file.j2"
skip_file: skip_file
tempest_until_failure: false
tempest_exit_on_failure: true
# Set tempest_version for different release
# For forked-tempest, we have branched name in synced with releases.
tempest_version_dict:
  newton: 'newton'
  ocata: '16.1.0'
  pike: '17.1.0'
  queens: '17.2.0'
  rocky: '19.0.0'
  master: 'master'
tempest_version: "{{ tempest_version_dict[release] }}"
tempest_conf_version_dict: {'ocata': '1.1.3', 'pike': '1.1.3', 'queens': '1.1.4', 'rocky': 'master', 'master': 'master'}
tempest_conf_version: "{{ tempest_conf_version_dict[release] }}"
tempestmail_config: config.yaml
tempestmail_log_server: http://logs.openstack.org
tempest_track_resources: true
tempest_test_image_version: 0.3.6
tempest_test_image_name: cirros-{{ tempest_test_image_version }}-x86_64-disk.img
tempest_test_image_path: http://download.cirros-cloud.net/{{ tempest_test_image_version }}/{{ tempest_test_image_name }}
# A dict containing values to be removed from tempest.conf
tempest_conf_removal: >-
  {% if release in ['queens'] -%}
  {{ tempest_conf_removal_queens }}
  {%- else -%}
  {{ tempest_conf_removal_all }}
  {%- endif -%}

tempest_conf_removal_all:
  network-feature-enabled.api_extensions: dvr

tempest_conf_removal_queens:
  volume.min_microversion: 3.0
  volume.max_microversion: 3.50
  network-feature-enabled.api_extensions: dvr
tempest_os_cloud: ""
stackviz_tarball: "https://tarballs.opendev.org/openstack/stackviz/dist/stackviz-latest.tar.gz"

python_package_prefix: "python"

# Headless Chrome configuration
tempest_use_headless_chrome: false
tempest_headless_chrome_port: 4444
